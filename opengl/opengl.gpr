library project OpenGL is
   -----------------------------------------------------------------------------
   --  Scenario variables
   -----------------------------------------------------------------------------

   -- Different operating systems need different linker
   -- flags. Moreover, some features (such as WGL, GLX,
   -- CGL) are only available on one specific platform.
   -- Supported values:
   --  * windows : Microsoft Windows
   --  * x11     : X Window System
   --  * quartz  : Quartz Compositor (OS X)
   type Windowing_System_Type is
     ("windows", "x11", "quartz");
   -- has a default so that the project can be opened in GPS.
   Windowing_System : Windowing_System_Type
     := external ("Windowing_System", "quartz");

   type Mode_Type is ("debug", "release");
   Mode : Mode_Type := external ("Mode", "debug");

   type Toggle_Type is ("enabled", "disabled");
   Auto_Exceptions : Toggle_Type := external ("Auto_Exceptions", "enabled");

   type Library_Kinds is ("static", "relocatable");
   Given_Library_Kind : Library_Kinds := external ("Library_Type", "static");

   -----------------------------------------------------------------------------
   --  Global configuration
   -----------------------------------------------------------------------------

   for Languages use ("ada");
   for Library_Name use "OpenGLAda";

   OpenGL_Sources := ("src/interface",
                      "src/implementation",
                      "src/generated");
   case Windowing_System is
      when "windows" => OpenGL_Sources := OpenGL_Sources & "src/windows";
      when "x11"     => OpenGL_Sources := OpenGL_Sources & "src/x11";
      when "quartz"  => OpenGL_Sources := OpenGL_Sources & "src/mac";
   end case;

   case Auto_Exceptions is
      when "enabled" => OpenGL_Sources :=
        OpenGL_Sources & "src/implementation/auto_exceptions";
      when "disabled" => OpenGL_Sources :=
        OpenGL_Sources & "src/implementation/no_auto_exceptions";
   end case;

   for Source_Dirs use OpenGL_Sources;
   for Object_Dir use "obj";
   for Library_Dir use "lib";
   for Library_Kind use Given_Library_Kind;

   -----------------------------------------------------------------------------
   --  Packages
   -----------------------------------------------------------------------------

   package Ide is
      for Vcs_Kind use "Git";
   end Ide;

   package Builder is
      case Mode is
         when "debug" =>
            for Global_Compilation_Switches ("ada") use ("-s", "-g");
         when "release" =>
            for Global_Compilation_Switches ("ada") use ("-s");
      end case;
   end Builder;

   package Compiler is
      Base_Switches := ("-gnat12", "-gnatwa", "-gnatwl", "-gnatwe", "-gnatwV",
                        "-fstack-check", "-gnaty3abcefhiklmNprt");
      case Mode is
         when "debug" =>
            for Default_Switches ("ada") use Base_Switches & ("-E");
         when "release" =>
            for Default_Switches ("ada") use Base_Switches & ("-O3", "-gnatn2");
      end case;
   end Compiler;

   package Linker is
      case Windowing_System is
         when "windows" =>
            for Linker_Options use ("-lOpenGL32", "-lGdi32");
         when "x11" =>
            for Linker_Options use ("-lGL", "-lX11");
         when "quartz" =>
            for Linker_Options use
              ("-Wl,-framework,OpenGL,-framework,CoreFoundation");
      end case;
   end Linker;

   package Binder is
      for Default_Switches ("ada") use ("-Es");
   end Binder;

end OpenGL;
